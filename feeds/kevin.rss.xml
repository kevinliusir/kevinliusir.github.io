<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kevin's Blog</title><link>http://www.feisblog.com/</link><description>专注自动化运维、大数据、云计算</description><atom:link href="http://www.feisblog.com/feeds/kevin.rss.xml" rel="self"></atom:link><lastBuildDate>Mon, 22 May 2017 09:53:25 +0800</lastBuildDate><item><title>Docker-EBK</title><link>http://www.feisblog.com/pages/2017/05/22/Docker-EBK/</link><description>&lt;h1&gt;Docker 安装EBK日志分析&lt;/h1&gt;
&lt;p&gt;=============================
目录&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;1. EBK介绍&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Elasticsearch是个开源分布式搜索引擎，它的特点有：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。&lt;/li&gt;
&lt;li&gt;Logstash是一个完全开源的工具，他可以对你的日志进行收集、过滤，并将其存储供以后使用（如，搜索）。&lt;/li&gt;
&lt;li&gt;本文档使用Filebeat 代替Logstash &lt;/li&gt;
&lt;li&gt;Kibana 也是一个开源和免费的工具，它Kibana可以为 Logstash 和 ElasticSearch 提供的日志分析友好的 Web 界面，可以帮助您汇总、分析和搜索重要数据日志。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;- Filebeat：ELK 协议栈的新成员，一个轻量级开源日志文件数据搜集器，基于 Logstash-Forwarder 源代码开发，是对它的替代。在需要采集日志数据的 server 上安装 Filebeat，并指定日志目录或日志文件后，Filebeat 就能读取数据，迅速发送到 Logstash 进行解析，亦或直接发送到 Elasticsearch 进行集中式存储和分析。&lt;/h2&gt;
&lt;h3&gt;基于 Filebeat 的 ELK 集群架构&lt;/h3&gt;
&lt;p&gt;&lt;img alt="" src="https://www.ibm.com/developerworks/cn/opensource/os-cn-elk-filebeat/image005.png" /&gt;&lt;/p&gt;
&lt;h3&gt;安装Elasticsearch&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="vg"&gt;$sudo&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="n"&gt;myes&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="sr"&gt;/etc/&lt;/span&gt;&lt;span class="ss"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="sr"&gt;/etc/&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;9200&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9200&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;9300&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9300&lt;/span&gt;  &lt;span class="n"&gt;elasticsearch&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;安装kibana&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="n"&gt;mykibana&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="sr"&gt;/etc/&lt;/span&gt;&lt;span class="ss"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="sr"&gt;/etc/&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="no"&gt;ELASTICSEARCH_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="mi"&gt;192&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;168&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;201&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9200&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;5601&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5601&lt;/span&gt;  &lt;span class="n"&gt;kibana&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;安装Filebeat&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;wget&lt;/span&gt;  &lt;span class="ss"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="n"&gt;artifacts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;elastic&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;co&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;downloads&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;beats&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;filebeat&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;filebeat&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rpm&lt;/span&gt;  

&lt;span class="n"&gt;rpm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ivh&lt;/span&gt; &lt;span class="n"&gt;filebeat&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rpm&lt;/span&gt;   

&lt;span class="n"&gt;vim&lt;/span&gt; &lt;span class="sr"&gt;/etc/&lt;/span&gt;&lt;span class="n"&gt;filebeat&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;filebeat&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yml&lt;/span&gt;   
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;filebeat.prospectors:
- input_type: log
  paths:
- /var/log/*.log
output.elasticsearch:
  hosts: [&amp;quot;localhost:9200&amp;quot;]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;启动filebeat&lt;/p&gt;
&lt;p&gt;/etc/init.d/filebeat start &lt;/p&gt;
&lt;h3&gt;访问kibana  即可看到日志&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kevin</dc:creator><pubDate>Mon, 22 May 2017 09:53:25 +0800</pubDate><guid>tag:www.feisblog.com,2017-05-22:pages/2017/05/22/Docker-EBK/</guid><category>ELK</category></item><item><title>Docker Machine 创建Swarm 集群</title><link>http://www.feisblog.com/pages/2017/03/15/Docker_Machine_Create_Swarm_Cluster/</link><description>&lt;h1&gt;1swarm主节点&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#docker run swarm create
a03ab86659df32ea3813d748f8a42f82
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;docker-machine create \
-d virtualbox \
--swarm \
--swarm-master \
--swarm-discovery token://a03ab86659df32ea3813d748f8a42f82 \
swarm-master
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;2创建Swarm从节点&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;docker-machine create \
-d virtualbox \
--swarm \
--swarm-discovery token://&amp;lt;TOKEN-FROM-ABOVE&amp;gt; \
swarm-node
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;3. 测试和查看&lt;/h1&gt;
&lt;p&gt;然后，我们就可以跨节点地运行我们所需的容器了。在这里，我们还要检查一下是否一切正常。所以，运行docker info命令来检查Swarm集群的信息。&lt;/p&gt;
&lt;h1&gt;docker info&lt;/h1&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kevin</dc:creator><pubDate>Wed, 15 Mar 2017 23:30:00 +0800</pubDate><guid>tag:www.feisblog.com,2017-03-15:pages/2017/03/15/Docker_Machine_Create_Swarm_Cluster/</guid><category>docker</category></item><item><title>docker(一) 安装</title><link>http://www.feisblog.com/pages/2015/01/10/docker_install/</link><description>&lt;h1&gt;安装和使用docker&lt;/h1&gt;
&lt;p&gt;介绍：
&lt;img alt="docker" src="/img/docker.png" /&gt;
Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）。几乎没有性能开销,可以很容易地在机器和数据中心中运行。最重要的是,他们不依赖于任何语言、框架或包装系统。&lt;/p&gt;
&lt;p&gt;不要忘本。 最重要是变成自己的知识，而&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kevin</dc:creator><pubDate>Sat, 10 Jan 2015 10:30:00 +0800</pubDate><guid>tag:www.feisblog.com,2015-01-10:pages/2015/01/10/docker_install/</guid><category>puppet</category></item><item><title>Puppet(二)简单安装配置Apache</title><link>http://www.feisblog.com/pages/2015/01/08/puppet_install_Apache/</link><description>&lt;h1&gt;Puppet(二)简单安装配置Apache&lt;/h1&gt;
&lt;p&gt;操作系统：CentOS6.6&lt;br /&gt;
master.feisblog.com 192.168.212.100 &lt;br /&gt;
agent.feisblog.com  192.168.212.110&lt;/p&gt;
&lt;h2&gt;1. 创建模块目录&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;#mkdir -p /etc/puppet/modules/httpd/{manifests,templates,files}&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;2. 创建安装httpd类&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#vim /etc/puppet/modules/httpd/manifests/install.pp &lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;httpd&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
     &lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;httpd&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
       &lt;span class="k"&gt;ensure&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;present&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;   
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;3. 创建启动httpd服务类&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#vim /etc/puppet/modules/httpd/manifests/service.pp  &lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;httpd&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;httpd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;ensure&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;running&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;hasstatus&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;hasrestart&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;enable&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;Class&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;httpd::install&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;4. 创建httpd 配置文件类，配置文件通过puppet获取（目录：/etc/puppet/modules/httpd/files/httpd.conf）&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#vim /etc/puppet/modules/httpd/manifests/conf.pp&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;httpd&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;httpd.conf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;ensure&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;present&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;owner&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;group&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;mode&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;644&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/etc/httpd/conf/httpd.conf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;puppet:///modules/httpd/httpd.conf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;Class&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;httpd::install&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;notify&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;Class&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;httpd::service&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;5. 创建主配置文件init.pp&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#vim /etc/puppet/modules/httpd/manifests/init.pp&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;httpd&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="n"&gt;httpd&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;httpd&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;httpd&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;6. 配置客户端节点&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#vim /etc/puppet/manifests/nodes/agent.feisblog.com.pp&lt;/span&gt;
&lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;agent.feisblog.com&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="n"&gt;httpd&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;7. 将节点载入puppet的site.pp 文件&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#vim /etc/puppet/manifests/site.pp&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;nodes/agent.feisblog.com.pp&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;8. 在agent端&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;#puppet agent --test --server master.feisblog.com --noop&lt;/code&gt;          &lt;/p&gt;
&lt;p&gt;&lt;code&gt;#puppet agent --test --server master.feisblog.com&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kevin</dc:creator><pubDate>Thu, 08 Jan 2015 10:30:00 +0800</pubDate><guid>tag:www.feisblog.com,2015-01-08:pages/2015/01/08/puppet_install_Apache/</guid><category>puppet</category></item><item><title>Puppet(一) 安装</title><link>http://www.feisblog.com/pages/2015/01/07/puppet_install/</link><description>&lt;h1&gt;Puppet(一) 安装&lt;/h1&gt;
&lt;p&gt;操作系统：Centos6.6&lt;br /&gt;
--------------------- | -------------
master.feisblog.com   | 192.168.212.100
agent.feisblog.com    | 192.168.212.110&lt;/p&gt;
&lt;h2&gt;1安装Centos EPEL 源&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;#rpm -ivh  http://mirrors.yun-idc.com/epel/6/x86_64/epel-release-6-8.noarch.rpm&lt;/code&gt;   &lt;/p&gt;
&lt;h2&gt;2.安装puppetLabs 源 ##&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;#rpm -ivh http://yum.puppetlabs.com/el/6Server/products/x86_64/puppetlabs-release-6-11.noarch.rpm&lt;/code&gt;   &lt;/p&gt;
&lt;h2&gt;3.安装服务器端&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;#yum install puppet-server&lt;/code&gt; &lt;br /&gt;
检查安装： &lt;br /&gt;
&lt;code&gt;#puppet -V&lt;/code&gt; &lt;br /&gt;
&lt;code&gt;#facter -v&lt;/code&gt;   &lt;/p&gt;
&lt;h2&gt;4.在客户端   ##&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;#yum install puppet&lt;/code&gt;   &lt;/p&gt;
&lt;h2&gt;5.配置&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;5.1 主机名和host 文件的修改   &lt;/li&gt;
&lt;li&gt;5.2 设置NTP时间同步 &lt;br /&gt;
    在crontab中加入：     &lt;br /&gt;
&lt;code&gt;*/10 * * * *  ntpdate -s time.nist.gov&lt;/code&gt;  &lt;/li&gt;
&lt;li&gt;5.3 配置site.pp &lt;br /&gt;
&lt;code&gt;#vim /etc/puppet/manifests/site.pp&lt;/code&gt;   &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;puppettest1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
        &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="no"&gt;Hello&lt;/span&gt; &lt;span class="no"&gt;World&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;6.启动服务&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#/etc/init.d/puppetmaster start&lt;/span&gt;
&lt;span class="c1"&gt;#chkconfig puppetmaster on  &lt;/span&gt;
&lt;span class="c1"&gt;#/etc/init.d/puppet start &lt;/span&gt;
&lt;span class="c1"&gt;#chkconfig puppet on &lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;7.客户端测试   ##&lt;/h2&gt;
&lt;p&gt;首先是发起验证&lt;br /&gt;
&lt;code&gt;# puppet agent --test --server server&lt;/code&gt;  &lt;br /&gt;
服务器端完成验证    &lt;br /&gt;
&lt;code&gt;#puppet cert --list&lt;/code&gt; &lt;br /&gt;
&lt;code&gt;#puppet cert sign agent.feisblog.com&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kevin</dc:creator><pubDate>Wed, 07 Jan 2015 10:30:00 +0800</pubDate><guid>tag:www.feisblog.com,2015-01-07:pages/2015/01/07/puppet_install/</guid><category>puppet</category></item></channel></rss>