<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Kevin's Blog</title><link href="http://www.feisblog.com/" rel="alternate"></link><link href="http://www.feisblog.com/feeds/wei-fu-wu.atom.xml" rel="self"></link><id>http://www.feisblog.com/</id><updated>2015-04-08T10:30:00+08:00</updated><entry><title>disconf</title><link href="http://www.feisblog.com/pages/2015/04/08/disconf/" rel="alternate"></link><updated>2015-04-08T10:30:00+08:00</updated><author><name>Kevin</name></author><id>tag:www.feisblog.com,2015-04-08:pages/2015/04/08/disconf/</id><summary type="html">&lt;h1&gt;Disconf&lt;/h1&gt;
&lt;h1&gt;为什么要用分布式配置管理中心&lt;/h1&gt;
&lt;p&gt;最近发生了一件事情，程序中的机密配置文件被开发人员发布到github上，为了避免这个事情发生，采用分布式配置管理中心来管理配置文件，并且为了避免不同环境配置的管理出错。   &lt;/p&gt;
&lt;p&gt;disconf （Distributed Configuration Management Platform）是一个分布式配置管理平台，能够使程序能够随处运行，脱离不同环境修改不同配置文件。
专注于各种 分布式系统配置管理 的通用组件/通用平台, 提供统一的配置管理服务。&lt;/p&gt;
&lt;h1&gt;安装&lt;/h1&gt;
&lt;h2&gt;安装依赖软件&lt;/h2&gt;
&lt;p&gt;安装Mysql（Ver 14.12 Distrib 5.0.45, for unknown-linux-gnu (x86_64) using EditLine wrapper）&lt;br /&gt;
安装Tomcat（apache-tomcat-7.0.50） 
安装Nginx（nginx/1.5.3）&lt;br /&gt;
安装 zookeeeper （zookeeper-3.3.0）&lt;br /&gt;
安装 Redis （2.4.5）&lt;br /&gt;
准备配置  &lt;br /&gt;
将你的配置文件放到此地址目录下（以下地址可自行设定）：  &lt;/p&gt;
&lt;p&gt;/home/work/dsp/disconf-rd/online-resources&lt;br /&gt;
如果不确定如何配置，&lt;strong&gt;可以拷贝/disconf-web/profile/rd/&lt;/strong&gt;目录下的文件，拷贝过去后修改即可。  &lt;/p&gt;
&lt;p&gt;配置文件包括：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;jdbc-mysql.properties (数据库配置)&lt;/li&gt;
&lt;li&gt;redis-config.properties (Redis配置，主要用于web登录使用)&lt;/li&gt;
&lt;li&gt;zoo.properties (Zookeeper配置)&lt;/li&gt;
&lt;li&gt;application.properties (应用配置）
注意，记得执行将application-demo.properties复制成application.properties：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;cp application-demo.properties application.properties
&lt;em&gt;注意，即使只有一个redis，也应该配置两个redis client，否则将造成内部错误。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;设置War包将要被部署的地址（以下地址可自行设定）：  &lt;/p&gt;
&lt;p&gt;/home/work/dsp/disconf-rd/war  &lt;/p&gt;
&lt;h2&gt;构建&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="no"&gt;ONLINE_CONFIG_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sr"&gt;/home/&lt;/span&gt;&lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dsp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disconf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;online&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;resources&lt;/span&gt;
&lt;span class="no"&gt;WAR_ROOT_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sr"&gt;/home/&lt;/span&gt;&lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dsp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disconf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;war&lt;/span&gt;
&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="no"&gt;ONLINE_CONFIG_PATH&lt;/span&gt;
&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="no"&gt;WAR_ROOT_PATH&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;disconf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;
&lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="n"&gt;deploy&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;deploy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样会在 /home/work/dsp/disconf-rd/war 生成以下结果：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-disconf-web.war&lt;/li&gt;
&lt;li&gt;-html&lt;/li&gt;
&lt;li&gt;-META-INF&lt;/li&gt;
&lt;li&gt;-WEB-INF&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;上线前的初始化工作&lt;/h2&gt;
&lt;p&gt;初始化数据库：&lt;/p&gt;
&lt;p&gt;可以参考 sql/readme.md 来进行数据库的初始化。注意顺序执行
0-init_table.sql
1-init_data.sql
201512/20151225.sql
20160701/20160701.sql
里面默认有6个用户（请注意线上环境删除这些用户以避免潜在的安全问题）&lt;/p&gt;
&lt;p&gt;name    pwd
admin   admin
testUser1   MhxzKhl9209
testUser2   MhxzKhl167
testUser3   MhxzKhl783
testUser4   MhxzKhl8758
testUser5   MhxzKhl112
如果想自己设置初始化的用户名信息，可以参考代码来自己生成用户：&lt;/p&gt;
&lt;p&gt;src/main/java/com/baidu/disconf/web/tools/UserCreateTools.java
部署War
修改server.xml文件，在Host结点下设定Context：&lt;/p&gt;
&lt;p&gt;&lt;Context path="" docBase="/home/work/dsp/disconf-rd/war"&gt;&lt;/Context&gt;
并设置端口为 8015&lt;/p&gt;
&lt;p&gt;启动Tomcat，即可。&lt;/p&gt;
&lt;h2&gt;部署 前端&lt;/h2&gt;
&lt;p&gt;修改 nginx.conf&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;upstream&lt;/span&gt; &lt;span class="n"&gt;disconf&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="mi"&gt;127&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8015&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="n"&gt;listen&lt;/span&gt;   &lt;span class="mi"&gt;8081&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;server_name&lt;/span&gt; &lt;span class="n"&gt;disconf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;access_log&lt;/span&gt; &lt;span class="sr"&gt;/home/&lt;/span&gt;&lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;logs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disconf&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;access&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;error_log&lt;/span&gt; &lt;span class="sr"&gt;/home/&lt;/span&gt;&lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;logs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disconf&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="sr"&gt;/home/&lt;/span&gt;&lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dsp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;disconf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;war&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vg"&gt;$query_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;expires&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="o"&gt;^/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;export&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;proxy_pass_header&lt;/span&gt; &lt;span class="no"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;proxy_set_header&lt;/span&gt; &lt;span class="no"&gt;Host&lt;/span&gt; &lt;span class="vg"&gt;$http_host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;proxy_redirect&lt;/span&gt; &lt;span class="n"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;proxy_set_header&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;Real&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;IP&lt;/span&gt; &lt;span class="vg"&gt;$remote_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;proxy_set_header&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;Scheme&lt;/span&gt; &lt;span class="vg"&gt;$scheme&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;proxy_pass&lt;/span&gt; &lt;span class="ss"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="n"&gt;disconf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;关于host
这里的 host 设置成 disconf.com （可以自定义），但它 必须与 application.properties 里的domain一样。&lt;/p&gt;
&lt;p&gt;然后浏览器的访问域名也是这个。&lt;/p&gt;
&lt;h1&gt;注意&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt; 特别指出在打包项目时候请检查python库版本3.&lt;em&gt;版本会报错，请用2.&lt;/em&gt;打包
第二点，在打出来的war包修改诸如zookeeper的配置时，必须重新打包，单纯修改war目录下的文件是无效的 &lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;参考文件&lt;/h1&gt;
&lt;p&gt;http://disconf.readthedocs.io/zh_CN/latest/&lt;/p&gt;
&lt;p&gt;https://www.oschina.net/p/disconf&lt;/p&gt;</summary><category term="disconf"></category></entry></feed>